# -*- coding: utf-8 -*-
"""assignment2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wIxUwYa58xCVXhDS-XMmDG_xPUOI7gaT
"""

# Import necessary libraries
import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

# Step 1: Load training data
url_train = "https://github.com/dustywhite7/Econ8310/raw/master/AssignmentData/assignment3.csv"
train_data = pd.read_csv(url_train)

# Step 2: Prepare the data
X = train_data.drop(columns=["meal"])
y = train_data["meal"]

# Identify and drop or encode non-numeric columns
# Get a list of columns with non-numeric data types
non_numeric_cols = X.select_dtypes(exclude=['number']).columns

# Drop non-numeric columns
X = X.drop(columns=non_numeric_cols)


# Fill or handle missing values in numeric columns
X = X.fillna(0)

# Step 3: Define the model
from sklearn.ensemble import RandomForestClassifier
model = RandomForestClassifier(random_state=42)

# Step 4: Fit the model on training data
modelFit = model.fit(X, y)

# Step 5: Load test data
url_test = "https://github.com/dustywhite7/Econ8310/raw/master/AssignmentData/assignment3test.csv"
test_data = pd.read_csv(url_test)

# Step 6: Prepare the test data (fill missing values just like training)

test_data = test_data.drop(columns=['meal', *non_numeric_cols])

test_data = test_data.fillna(0) # Fill missing values


# Step 7: Make predictions (binary values: 1 for meal, 0 for not meal)
pred = modelFit.predict(test_data)

# Step 8: Convert to a list if needed
pred = list(pred)

# Display result summary
print("Number of predictions:", len(pred))
print("Sample predictions:", pred[:10])